/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    get: operations["AppController_index"];
  };
  "/admins": {
    get: operations["AdminsController_findAll"];
    post: operations["AdminsController_create"];
  };
  "/admins/{id}": {
    get: operations["AdminsController_findOne"];
    delete: operations["AdminsController_remove"];
    patch: operations["AdminsController_update"];
  };
  "/patients": {
    get: operations["PatientsController_findAll"];
    post: operations["PatientsController_create"];
  };
  "/patients/{id}": {
    get: operations["PatientsController_findOne"];
    delete: operations["PatientsController_remove"];
    patch: operations["PatientsController_update"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateAdminDto: {
      email: string;
      password: string;
      phone_number: string;
      /** @enum {string} */
      roles: "patient" | "admin" | "therapist";
    };
    AdminResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      email: string;
      phone_number: string;
      /** @enum {string} */
      roles: "patient" | "admin" | "therapist";
    };
    UpdateAdminDto: {
      email?: string;
      password?: string;
      phone_number?: string;
      /** @enum {string} */
      roles?: "patient" | "admin" | "therapist";
    };
    CreatePatientDto: {
      email: string;
    };
    PatientResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      email: string;
      username: string;
      phone_number: string;
      /** @enum {string} */
      gender: "male" | "female";
      roles: ("patient" | "admin" | "therapist")[];
      /** @default false */
      is_deleted: boolean;
    };
    UpdatePatientDto: {
      email?: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  AppController_index: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AdminsController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AdminResponseDto"][];
        };
      };
    };
  };
  AdminsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAdminDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AdminsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AdminsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AdminsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateAdminDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PatientsController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PatientResponseDto"][];
        };
      };
    };
  };
  PatientsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePatientDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  PatientsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PatientsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PatientsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePatientDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
}
