/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/": {
    get: operations["AppController_index"];
  };
  "/admins": {
    get: operations["AdminsController_findAll"];
    post: operations["AdminsController_create"];
  };
  "/admins/{id}": {
    get: operations["AdminsController_findOne"];
    delete: operations["AdminsController_remove"];
    patch: operations["AdminsController_update"];
  };
  "/patients": {
    get: operations["PatientsController_findAll"];
    post: operations["PatientsController_create"];
  };
  "/patients/{id}": {
    get: operations["PatientsController_findOne"];
    delete: operations["PatientsController_remove"];
    patch: operations["PatientsController_update"];
  };
  "/patients/ban-patient/{id}": {
    patch: operations["PatientsController_banPatient"];
  };
  "/patients/unban-patient/{id}": {
    patch: operations["PatientsController_unbanPatient"];
  };
  "/therapists": {
    get: operations["TherapistsController_findAll"];
    post: operations["TherapistsController_create"];
  };
  "/therapists/specializations": {
    get: operations["TherapistsController_getAllSpecializations"];
  };
  "/therapists/{id}": {
    get: operations["TherapistsController_findOne"];
    delete: operations["TherapistsController_remove"];
    patch: operations["TherapistsController_update"];
  };
  "/posts": {
    get: operations["PostsController_findAll"];
    post: operations["PostsController_create"];
  };
  "/posts/{id}": {
    get: operations["PostsController_findOne"];
    delete: operations["PostsController_remove"];
    patch: operations["PostsController_update"];
  };
  "/posts/remove-post/{id}": {
    patch: operations["PostsController_userRemovePost"];
  };
  "/seeds": {
    post: operations["SeedsController_create"];
  };
  "/factories": {
    post: operations["FactoriesController_create"];
  };
  "/appointments": {
    get: operations["AppointmentsController_findAll"];
    post: operations["AppointmentsController_create"];
  };
  "/appointments/{id}": {
    get: operations["AppointmentsController_findOne"];
    delete: operations["AppointmentsController_remove"];
    patch: operations["AppointmentsController_update"];
  };
  "/auth/login": {
    post: operations["AuthController_login"];
  };
  "/auth/logout": {
    get: operations["AuthController_logout"];
  };
  "/credential": {
    get: operations["CredentialController_findAll"];
    post: operations["CredentialController_create"];
  };
  "/credential/{id}": {
    get: operations["CredentialController_findOne"];
    delete: operations["CredentialController_remove"];
    patch: operations["CredentialController_update"];
  };
  "/like-posts": {
    get: operations["LikePostsController_findAll"];
  };
  "/like-posts/by-post/{id}": {
    get: operations["LikePostsController_findLikePostByPost"];
  };
  "/like-posts/by-patient/{id}": {
    get: operations["LikePostsController_findLikePostByPatient"];
  };
  "/like-posts/{id}": {
    patch: operations["LikePostsController_update"];
  };
  "/post-photos": {
    get: operations["PostPhotosController_findAll"];
    post: operations["PostPhotosController_create"];
  };
  "/post-photos/{id}": {
    get: operations["PostPhotosController_findOne"];
    delete: operations["PostPhotosController_remove"];
    patch: operations["PostPhotosController_update"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    CreateAdminDto: {
      email: string;
      password: string;
    };
    AdminResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      email: string;
      phone_number: string;
      roles: ("patient" | "admin" | "therapist")[];
    };
    UpdateAdminDto: {
      email?: string;
      password?: string;
    };
    CreatePatientDto: {
      email: string;
      username: string;
      phone_number: string;
      gender: string;
    };
    PatientResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      email: string;
      username: string;
      phone_number: string;
      /** @enum {string} */
      gender: "male" | "female";
      roles: ("patient" | "admin" | "therapist")[];
      /** @default false */
      is_deleted: boolean;
      /** @default false */
      is_banned: boolean;
    };
    PostResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      body: string;
      patient: components["schemas"]["PatientResponseDto"];
      like_count: number;
    };
    RelationalPatientResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      email: string;
      username: string;
      phone_number: string;
      /** @enum {string} */
      gender: "male" | "female";
      roles: ("patient" | "admin" | "therapist")[];
      /** @default false */
      is_deleted: boolean;
      /** @default false */
      is_banned: boolean;
      posts: components["schemas"]["PostResponseDto"][];
    };
    UpdatePatientDto: {
      email?: string;
      username?: string;
      phone_number?: string;
      gender?: string;
      is_banned: boolean;
      is_deleted: boolean;
      roles: ("patient" | "admin" | "therapist")[];
    };
    CreateTherapistDto: {
      first_name: string;
      last_name: string;
      bio: string;
      username: string;
      email: string;
      phone_number: string;
      specializations: string[];
      /** @enum {string} */
      gender: "male" | "female";
      /**
       * @default [
       *   "therapist"
       * ]
       * @enum {string}
       */
      roles: "patient" | "admin" | "therapist";
      /** @default false */
      is_deleted: boolean;
    };
    TherapistResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      first_name: string;
      last_name: string;
      bio: string;
      username: string;
      email: string;
      phone_number: string;
      specializations: string[];
      /** @enum {string} */
      gender: "male" | "female";
      /** @enum {string} */
      roles: "patient" | "admin" | "therapist";
      is_deleted: boolean;
    };
    UpdateTherapistDto: {
      first_name?: string;
      last_name?: string;
      bio?: string;
      username?: string;
      email?: string;
      phone_number?: string;
      specializations?: string[];
      /** @enum {string} */
      gender?: "male" | "female";
      /**
       * @default [
       *   "therapist"
       * ]
       * @enum {string}
       */
      roles?: "patient" | "admin" | "therapist";
      /** @default false */
      is_deleted?: boolean;
    };
    CreatePostDto: {
      body: string;
      patient: string;
      postPhotos: string[];
    };
    PostPhotoResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      filename: string;
      post: components["schemas"]["PostResponseDto"];
    };
    RelationalPostResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      body: string;
      patient: components["schemas"]["PatientResponseDto"];
      like_count: number;
      postPhotos: components["schemas"]["PostPhotoResponseDto"][];
    };
    UpdatePostDto: {
      body: string;
      postPhotos: string[];
      /** @default false */
      is_deleted: boolean;
    };
    CreateFactoryDto: {
      /** @default 10 */
      length?: number;
    };
    CreateAppointmentDto: {
      note: string;
      symptoms: string;
      patient: string;
      therapist: string;
      /** Format: date-time */
      scheduleDate: string;
      status: string;
    };
    AppointmentResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      note: string;
      symptoms: string;
      /** Format: date-time */
      scheduleDate: string;
      /** @enum {string} */
      status: "requested" | "scheduled" | "completed" | "cancelled";
      patient: components["schemas"]["PatientResponseDto"];
      therapist: components["schemas"]["TherapistResponseDto"];
    };
    UpdateAppointmentDto: {
      note?: string;
      symptoms?: string;
      patient?: string;
      therapist?: string;
      /** Format: date-time */
      scheduleDate?: string;
      status?: string;
    };
    AdminLoginDto: {
      email: string;
      password: string;
    };
    CreateCredentialDto: Record<string, never>;
    UpdateCredentialDto: Record<string, never>;
    LikePostResponseDto: {
      _id: string;
      /** Format: date-time */
      createdAt: string;
      /** Format: date-time */
      updatedAt: string;
      patient: components["schemas"]["PatientResponseDto"];
      post: components["schemas"]["PostResponseDto"];
      is_like: boolean;
    };
    UpdateLikePostDto: {
      patient?: string;
      post?: string;
    };
    UpdatePostPhotoDto: {
      filename?: string;
      post?: Record<string, never>;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  AppController_index: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  AdminsController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AdminResponseDto"][];
        };
      };
    };
  };
  AdminsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAdminDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AdminsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AdminsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AdminsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateAdminDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PatientsController_findAll: {
    parameters: {
      query?: {
        /** @example 1 */
        page?: number;
        /** @example 10 */
        limit?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["RelationalPatientResponseDto"][];
        };
      };
    };
  };
  PatientsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePatientDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  PatientsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PatientResponseDto"];
        };
      };
    };
  };
  PatientsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PatientsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePatientDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PatientsController_banPatient: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PatientsController_unbanPatient: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TherapistsController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TherapistResponseDto"][];
        };
      };
    };
  };
  TherapistsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateTherapistDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  TherapistsController_getAllSpecializations: {
    responses: {
      200: {
        content: {
          "application/json": string[];
        };
      };
    };
  };
  TherapistsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["TherapistResponseDto"];
        };
      };
    };
  };
  TherapistsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  TherapistsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateTherapistDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PostsController_findAll: {
    parameters: {
      query?: {
        /** @example 1 */
        page?: number;
        /** @example 10 */
        limit?: number;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["RelationalPostResponseDto"][];
        };
      };
    };
  };
  PostsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreatePostDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  PostsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["RelationalPostResponseDto"];
        };
      };
    };
  };
  PostsController_remove: {
    parameters: {
      header: {
        patient_id: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PostsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePostDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PostsController_userRemovePost: {
    parameters: {
      header: {
        patient_id: string;
      };
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  SeedsController_create: {
    responses: {
      201: {
        content: never;
      };
    };
  };
  FactoriesController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateFactoryDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AppointmentsController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AppointmentResponseDto"][];
        };
      };
    };
  };
  AppointmentsController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateAppointmentDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AppointmentsController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["AppointmentResponseDto"];
        };
      };
    };
  };
  AppointmentsController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AppointmentsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateAppointmentDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  AuthController_login: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["AdminLoginDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  AuthController_logout: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  CredentialController_findAll: {
    responses: {
      200: {
        content: never;
      };
    };
  };
  CredentialController_create: {
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateCredentialDto"];
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  CredentialController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  CredentialController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  CredentialController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateCredentialDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  LikePostsController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["LikePostResponseDto"][];
        };
      };
    };
  };
  LikePostsController_findLikePostByPost: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["LikePostResponseDto"][];
        };
      };
    };
  };
  LikePostsController_findLikePostByPatient: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["LikePostResponseDto"][];
        };
      };
    };
  };
  LikePostsController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdateLikePostDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PostPhotosController_findAll: {
    responses: {
      200: {
        content: {
          "application/json": components["schemas"]["PostPhotoResponseDto"];
        };
      };
    };
  };
  PostPhotosController_create: {
    requestBody: {
      content: {
        "application/json": string;
      };
    };
    responses: {
      201: {
        content: never;
      };
    };
  };
  PostPhotosController_findOne: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PostPhotosController_remove: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
  PostPhotosController_update: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["UpdatePostPhotoDto"];
      };
    };
    responses: {
      200: {
        content: never;
      };
    };
  };
}
